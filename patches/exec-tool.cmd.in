@echo off
SET arg0=%0
SET arg1=%1
SET arg2=%2
SET args=%*


SET ORIGINAL_AS_FOR_TARGET=@WINE_ORIGINAL_AS_FOR_TARGET@
SET ORIGINAL_LD_FOR_TARGET=@WINE_ORIGINAL_LD_FOR_TARGET@
SET ORIGINAL_LD_BFD_FOR_TARGET=@WINE_ORIGINAL_LD_BFD_FOR_TARGET@
SET ORIGINAL_LD_GOLD_FOR_TARGET=@WINE_ORIGINAL_LD_GOLD_FOR_TARGET@
SET ORIGINAL_PLUGIN_LD_FOR_TARGET=@WINE_ORIGINAL_PLUGIN_LD_FOR_TARGET@
SET ORIGINAL_NM_FOR_TARGET=@WINE_ORIGINAL_NM_FOR_TARGET@
SET exeext=@host_exeext@
SET fast_install=@enable_fast_install@
SET objdir=@objdir@

SET invoked=%arg0%
SET invokeddir=%arg0%
for /F %%i in ("%invoked%") do SET invoked=%%~ni
for /F %%i in ("%invokeddir%") do SET invokeddir=%%~dpi

SET id=%invoked%

IF x%invoked%==xas goto invas
if x%invoked%==xcollect-ld goto invcollectld
if x%invoked%==xnm goto invnm

goto end

:invas
SET original=%ORIGINAL_AS_FOR_TARGET%
SET prog=as-new%exeext%
SET dir=gas
goto endselect

:invcollectld
REM Check -fuse-ld=bfd and -fuse-ld=gold

echo %args% | wineFindStrWorkarround "-fuse-ld=bfd"

IF %ERRORLEVEL% EQU 0 goto bfdld

echo %args% | wineFindStrWorkarround "-fuse-ld=gold"

if %ERRORLEVEL% EQU 0 goto goldld

if x%arg1%==x-plugin goto pluginld

if x%arg2%==x-plugin goto pluginld

SET original=%ORIGINAL_LD_FOR_TARGET%
goto choseld

:bfdld
SET original=%ORIGINAL_LD_BFD_FOR_TARGET%
goto choseld

:goldld
SET original=%ORIGINAL_LD_GOLD_FOR_TARGET%
goto choseld

:pluginld
SET original=%ORIGINAL_PLUGIN_LD_FOR_TARGET%
goto choseld

:choseld
SET prog=ld-new%exeext%

if x%original% == x../gold/ld-new%exeext% goto golddir
if x%original% == x..\gold\ld-new%exeext% goto golddir

SET dir=ld
goto chosedir

:golddir
SET dir=gold
REM No need to handle relink since gold doesn't use libtool.
SET fast_install=yes

goto chosedir

:chosedir

SET id=ld

goto endselect

:invnm
SET original=%ORIGINAL_NM_FOR_TARGET%
SET prog=nm-new%exeext%
SET dir=binutils
goto endselect

:endselect

if x%original:~0,3%==x../ goto origdotdot
if x%original:~0,3%==x..\ goto origdotdot
call %original% %args%
goto end

:origdotdot
REM compute absolute path of the location of this script
SET tdir=%invokeddir%
pushd %tdir%
SET scriptdir=%cd%
popd

if exist %scriptdir%\..\%dir%\%prog%.exe goto testxscrdirprg
if exist %scriptdir%\..\%dir%\%prog%.cmd goto testxscrdirprg

call %scriptdir%\..\prev-%dir%\%prog% %args%
goto end

:testxscrdirprg

if NOT x%fast_install%==xyes call %scriptdir%\..\%dir%\%prog% %args%
if NOT x%fast_install%==xyes goto end

REM if libtool did everything it needs to do, there's a fast path
SET lt_prog=%scriptdir%\..\%dir%\%objdir%\lt-%prog%

if exist %lt_prog%.exe %lt_prog%.exe %args%
if exist %lt_prog%.exe goto end
if exist %lt_prog%.cmd call %lt_prog%.cmd %args%
if exist %lt_prog%.cmd goto end

REM libtool has not relinked ld-new yet, but we cannot just use the
REM previous stage (because then the relinking would just never happen!).
REM So we take extra care to use prev-ld/ld-new *on recursive calls*.
CALL SET LT_RCU=%%LT_RCU_%id%%%
if x%LT_RCU%==x1 call %scriptdir%\..\prev-%dir%\%prog% %args%
if x%LT_RCU%==x1 goto end

CALL SET LT_RCU_%id%=1
call %scriptdir%\..\%dir%\%prog% %args%
exit /b %errorlevel%

:end
